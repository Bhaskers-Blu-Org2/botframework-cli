> This file contains templates to help with the generation process

# roles
- IF: ${role}
    - hasRole ${role}
- ELSE:
    -

# propertyFilename
- ${locale}/${prefix}-${property}.${locale}.lg

# entityLGFilename
- ${locale}/${prefix}-${property}Entity.${locale}.lg

# entityDisplay
-```
 # ${property}Entity(val)
 - $\{val\}
```

# entityLUFilename
- ${locale}/${prefix}-${property}Entity.${locale}.lu

# missingFilename
- ${prefix}-${property}-missing.dialog

# builtinEntityFilename(prebuiltEntity)
- ${locale}/${prefix}-${property}-${prebuiltEntity}.${locale}.lu

# assignFilename(entity)
- ${prefix}-${property}-assign-${entity}Entity.dialog

# propertyName
- ```
@ list PROPERTYName
    - ${property}:
```

# operations(entity, values)
-```
@composite AddToProperty = [${entity}]
@composite RemoveFromProperty = [${entity}]
@composite ClearProperty = [PROPERTYName]
@composite ShowProperty = [PROPERTYName]
# ${triggerIntent}
${substitutions(`library-operations.${locale}.data`, json(`{"entity": ${list(values)}, "property": ["${property}"]}`), 3)}
- ${property}
```

# list(values)
- [${join(foreach(values, value, `"${value}"`), ', ')}]

# synonyms(value)
- ${join(foreach(phrases(value), phrase, concat('\t\t- ', phrase)), '\n')}

> Top-level template support
# roleEntities(entity)
- ${createArray(`${entity}:${property}`, entity)}

# propertyTemplates
- ${createArray(`${type}Property.lg`, `${type}-missing.dialog`)}

# entityTemplates
- ${createArray(`${entity}Entity.lu`, `${entity}Entity.lg`, `${entity}Entity-assign-${type}.dialog`)}

# importLG(name)
-\[${prefix}-${name}.${locale}.lg](${prefix}-${name}.${locale}.lg)
